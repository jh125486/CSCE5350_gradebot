// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: pkg/proto/quality.proto

package proto

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EvaluateCodeQualityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Instructions  string                 `protobuf:"bytes,1,opt,name=instructions,proto3" json:"instructions,omitempty"`
	Files         []*File                `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EvaluateCodeQualityRequest) Reset() {
	*x = EvaluateCodeQualityRequest{}
	mi := &file_pkg_proto_quality_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EvaluateCodeQualityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateCodeQualityRequest) ProtoMessage() {}

func (x *EvaluateCodeQualityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_quality_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateCodeQualityRequest.ProtoReflect.Descriptor instead.
func (*EvaluateCodeQualityRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_quality_proto_rawDescGZIP(), []int{0}
}

func (x *EvaluateCodeQualityRequest) GetInstructions() string {
	if x != nil {
		return x.Instructions
	}
	return ""
}

func (x *EvaluateCodeQualityRequest) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

type EvaluateCodeQualityResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The quality score, from 0-100.
	QualityScore  int32  `protobuf:"varint,1,opt,name=quality_score,json=qualityScore,proto3" json:"quality_score,omitempty"`
	Feedback      string `protobuf:"bytes,2,opt,name=feedback,proto3" json:"feedback,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EvaluateCodeQualityResponse) Reset() {
	*x = EvaluateCodeQualityResponse{}
	mi := &file_pkg_proto_quality_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EvaluateCodeQualityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateCodeQualityResponse) ProtoMessage() {}

func (x *EvaluateCodeQualityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_quality_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateCodeQualityResponse.ProtoReflect.Descriptor instead.
func (*EvaluateCodeQualityResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_quality_proto_rawDescGZIP(), []int{1}
}

func (x *EvaluateCodeQualityResponse) GetQualityScore() int32 {
	if x != nil {
		return x.QualityScore
	}
	return 0
}

func (x *EvaluateCodeQualityResponse) GetFeedback() string {
	if x != nil {
		return x.Feedback
	}
	return ""
}

type File struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_pkg_proto_quality_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_quality_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_pkg_proto_quality_proto_rawDescGZIP(), []int{2}
}

func (x *File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

var File_pkg_proto_quality_proto protoreflect.FileDescriptor

const file_pkg_proto_quality_proto_rawDesc = "" +
	"\n" +
	"\x17pkg/proto/quality.proto\x12\aquality\"e\n" +
	"\x1aEvaluateCodeQualityRequest\x12\"\n" +
	"\finstructions\x18\x01 \x01(\tR\finstructions\x12#\n" +
	"\x05files\x18\x02 \x03(\v2\r.quality.FileR\x05files\"^\n" +
	"\x1bEvaluateCodeQualityResponse\x12#\n" +
	"\rquality_score\x18\x01 \x01(\x05R\fqualityScore\x12\x1a\n" +
	"\bfeedback\x18\x02 \x01(\tR\bfeedback\"4\n" +
	"\x04File\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent2r\n" +
	"\x0eQualityService\x12`\n" +
	"\x13EvaluateCodeQuality\x12#.quality.EvaluateCodeQualityRequest\x1a$.quality.EvaluateCodeQualityResponseB1Z/github.com/jh125486/CSCE5350_gradebot/pkg/protob\x06proto3"

var (
	file_pkg_proto_quality_proto_rawDescOnce sync.Once
	file_pkg_proto_quality_proto_rawDescData []byte
)

func file_pkg_proto_quality_proto_rawDescGZIP() []byte {
	file_pkg_proto_quality_proto_rawDescOnce.Do(func() {
		file_pkg_proto_quality_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_proto_quality_proto_rawDesc), len(file_pkg_proto_quality_proto_rawDesc)))
	})
	return file_pkg_proto_quality_proto_rawDescData
}

var file_pkg_proto_quality_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pkg_proto_quality_proto_goTypes = []any{
	(*EvaluateCodeQualityRequest)(nil),  // 0: quality.EvaluateCodeQualityRequest
	(*EvaluateCodeQualityResponse)(nil), // 1: quality.EvaluateCodeQualityResponse
	(*File)(nil),                        // 2: quality.File
}
var file_pkg_proto_quality_proto_depIdxs = []int32{
	2, // 0: quality.EvaluateCodeQualityRequest.files:type_name -> quality.File
	0, // 1: quality.QualityService.EvaluateCodeQuality:input_type -> quality.EvaluateCodeQualityRequest
	1, // 2: quality.QualityService.EvaluateCodeQuality:output_type -> quality.EvaluateCodeQualityResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pkg_proto_quality_proto_init() }
func file_pkg_proto_quality_proto_init() {
	if File_pkg_proto_quality_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_proto_quality_proto_rawDesc), len(file_pkg_proto_quality_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_proto_quality_proto_goTypes,
		DependencyIndexes: file_pkg_proto_quality_proto_depIdxs,
		MessageInfos:      file_pkg_proto_quality_proto_msgTypes,
	}.Build()
	File_pkg_proto_quality_proto = out.File
	file_pkg_proto_quality_proto_goTypes = nil
	file_pkg_proto_quality_proto_depIdxs = nil
}
