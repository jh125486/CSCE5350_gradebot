name: release-and-deploy
on:
  push:
    tags:
      - "v*"

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      localstack:
        image: localstack/localstack:latest
        ports:
          - 4566:4566
        env:
          DEBUG: 1
          SERVICES: s3
          S3_SKIP_SIGNATURE_VALIDATION: 1
        options: >-
          --health-cmd="curl -f http://localhost:4566/_localstack/health || exit 1"
          --health-interval=30s
          --health-timeout=10s
          --health-retries=5
          --health-start-period=30s

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Install dependencies
        run: go mod download

      - name: Wait for LocalStack to be ready
        run: |
          echo "Waiting for LocalStack to be ready..."
          max_attempts=30
          attempt=1
          while ! curl -f http://localhost:4566/_localstack/health | grep -q '"s3": "available"'; do
            if [ $attempt -ge $max_attempts ]; then
              echo "LocalStack failed to start after $max_attempts attempts"
              exit 1
            fi
            echo "Attempt $attempt/$max_attempts..."
            sleep 2
            ((attempt++))
          done
          echo "LocalStack is ready!"

      - name: Create S3 test buckets
        run: |
          # Install awslocal for easier LocalStack interaction
          pip install awscli-local
          
          # Create the test buckets
          awslocal s3 mb s3://test-gradebot-bucket
          awslocal s3 mb s3://gradebot-prod-bucket
          awslocal s3 mb s3://gradebot-staging-bucket
          
          # Verify buckets were created
          echo "Available buckets:"
          awslocal s3 ls
        env:
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
          AWS_DEFAULT_REGION: us-east-1

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.out ./...
        env:
          R2_ENDPOINT: http://localhost:4566
          R2_BUCKET: test-gradebot-bucket
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
          AWS_REGION: us-east-1
          USE_PATH_STYLE: true

      - name: Upload coverage reports
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.out

  # --- GoReleaser --- client
  release:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BUILD_ID: ${{ secrets.BUILD_ID }}

  # --- Deploy to Koyeb --- server
  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Install and configure the Koyeb CLI
        uses: koyeb-community/koyeb-actions@v2
        with:
          api_token: "${{ secrets.KOYEB_API_TOKEN }}"
      - name: Create OpenAI API key secret
        uses: koyeb/action-git-deploy/secret@v1
        with:
          secret-name: OPENAI_API_KEY
          secret-value: "${{ secrets.OPENAI_API_KEY }}"
      - name: Create Build ID secret
        uses: koyeb/action-git-deploy/secret@v1
        with:
          secret-name: BUILD_ID
          secret-value: "${{ secrets.BUILD_ID }}"
      - name: Create R2 Endpoint secret
        uses: koyeb/action-git-deploy/secret@v1
        with:
          secret-name: R2_ENDPOINT
          secret-value: "${{ secrets.R2_ENDPOINT }}"
      - name: Create AWS Access Key ID secret
        uses: koyeb/action-git-deploy/secret@v1
        with:
          secret-name: AWS_ACCESS_KEY_ID
          secret-value: "${{ secrets.AWS_ACCESS_KEY_ID }}"
      - name: Create AWS Secret Access Key secret
        uses: koyeb/action-git-deploy/secret@v1
        with:
          secret-name: AWS_SECRET_ACCESS_KEY
          secret-value: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
      - name: Deploy to Koyeb
        uses: koyeb/action-git-deploy@v1
        with:
          git-url: github.com/jh125486/CSCE5350_gradebot
          git-branch: main
          git-builder: buildpack
          git-run-command: ./bin/CSCE5350_gradebot server
          service-regions: was
          service-instance-type: free
          service-env: OPENAI_API_KEY=@OPENAI_API_KEY,BUILD_ID=@BUILD_ID,R2_ENDPOINT=@R2_ENDPOINT,AWS_ACCESS_KEY_ID=@AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY=@AWS_SECRET_ACCESS_KEY
          service-ports: "8080:http"
          service-routes: "/:8080"
          app-name: gradebot
          service-name: gradebot-server
