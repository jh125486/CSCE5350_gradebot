name: release-and-deploy
on:
  push:
    tags:
      - "v*"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.out ./...

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out

  # --- GoReleaser --- client
  release:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BUILD_ID: ${{ secrets.BUILD_ID }}

  # --- Deploy to Koyeb --- server
  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Install and configure the Koyeb CLI
        uses: koyeb-community/koyeb-actions@v2
        with:
          api_token: "${{ secrets.KOYEB_API_TOKEN }}"
      - name: Create OpenAI API key secret
        uses: koyeb/action-git-deploy/secret@v1
        with:
          secret-name: OPENAI_API_KEY
          secret-value: "${{ secrets.OPENAI_API_KEY }}"
      - name: Create Build ID secret
        uses: koyeb/action-git-deploy/secret@v1
        with:
          secret-name: BUILD_ID
          secret-value: "${{ secrets.BUILD_ID }}"
      - name: Deploy to Koyeb
        uses: koyeb/action-git-deploy@v1
        with:
          git-url: github.com/jh125486/CSCE5350_gradebot
          git-branch: main
          git-builder: buildpack
          git-run-command: ./bin/CSCE5350_gradebot server
          service-regions: was
          service-instance-type: free
          service-env: |
            OPENAI_API_KEY=@OPENAI_API_KEY
            BUILD_ID=@BUILD_ID
          service-ports: "8080:http"
          service-routes: "/:8080"
          app-name: gradebot
          service-name: gradebot-server
