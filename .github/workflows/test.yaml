name: test

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      localstack:
        image: localstack/localstack:latest
        ports:
          - 4566:4566
        env:
          DEBUG: 1
          SERVICES: s3
          S3_SKIP_SIGNATURE_VALIDATION: 1
        options: >-
          --health-cmd="curl -f http://localhost:4566/_localstack/health || exit 1"
          --health-interval=30s
          --health-timeout=10s
          --health-retries=5
          --health-start-period=30s

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 1

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.24'
          cache: true

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
      
      - name: SonarQube Scan
        if: ${{ secrets.SONAR_TOKEN != '' }}
        uses: SonarSource/sonarqube-scan-action@v6
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.txt ./...
        env:
          R2_ENDPOINT: http://localhost:4566
          R2_BUCKET: test-gradebot-bucket
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
          AWS_REGION: us-east-1
          USE_PATH_STYLE: true

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.txt
          token: ${{ secrets.CODECOV_TOKEN }}
