name: test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      localstack:
        image: localstack/localstack:latest
        ports:
          - 4566:4566
        env:
          DEBUG: 1
          SERVICES: s3
          S3_SKIP_SIGNATURE_VALIDATION: 1
        options: >-
          --health-cmd="curl -f http://localhost:4566/_localstack/health || exit 1"
          --health-interval=30s
          --health-timeout=10s
          --health-retries=5
          --health-start-period=30s

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Install dependencies
        run: go mod download

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest

      - name: Wait for LocalStack to be ready
        run: |
          echo "Waiting for LocalStack to be ready..."
          max_attempts=30
          attempt=1
          while ! curl -f http://localhost:4566/_localstack/health | grep -q '"s3": "available"'; do
            if [ $attempt -ge $max_attempts ]; then
              echo "LocalStack failed to start after $max_attempts attempts"
              exit 1
            fi
            echo "Attempt $attempt/$max_attempts..."
            sleep 2
            ((attempt++))
          done
          echo "LocalStack is ready!"

      - name: Create S3 test buckets
        run: |
          # Install awslocal for easier LocalStack interaction
          pip install awscli-local
        env:
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
          AWS_DEFAULT_REGION: us-east-1

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.txt ./...
        env:
          R2_ENDPOINT: http://localhost:4566
          R2_BUCKET: test-gradebot-bucket
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
          AWS_REGION: us-east-1
          USE_PATH_STYLE: true

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
